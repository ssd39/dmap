/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.7.4-338
 *
 */
import { FluencePeer } from '@fluencelabs/fluence';
import { CallParams } from '@fluencelabs/fluence/dist/internal/compilerSupport/v3';
export interface StringOpDef {
    array: (s: string, callParams: CallParams<'s'>) => string[] | Promise<string[]>;
}
export declare function registerStringOp(service: StringOpDef): void;
export declare function registerStringOp(serviceId: string, service: StringOpDef): void;
export declare function registerStringOp(peer: FluencePeer, service: StringOpDef): void;
export declare function registerStringOp(peer: FluencePeer, serviceId: string, service: StringOpDef): void;
export declare function add_blueprint(module_hash: string, config?: {
    ttl?: number;
}): Promise<string>;
export declare function add_blueprint(peer: FluencePeer, module_hash: string, config?: {
    ttl?: number;
}): Promise<string>;
export declare function remove_service(relay: string, service_id: string, config?: {
    ttl?: number;
}): Promise<boolean>;
export declare function remove_service(peer: FluencePeer, relay: string, service_id: string, config?: {
    ttl?: number;
}): Promise<boolean>;
export declare function add_module(name: string, path: string, config?: {
    ttl?: number;
}): Promise<string>;
export declare function add_module(peer: FluencePeer, name: string, path: string, config?: {
    ttl?: number;
}): Promise<string>;
export declare function image_resize(cid: string, height: number, width: number, ipfs: string, node: string, service_id: string, error: (arg0: string, arg1: string, callParams: CallParams<'arg0' | 'arg1'>) => void | Promise<void>, config?: {
    ttl?: number;
}): Promise<number[]>;
export declare function image_resize(peer: FluencePeer, cid: string, height: number, width: number, ipfs: string, node: string, service_id: string, error: (arg0: string, arg1: string, callParams: CallParams<'arg0' | 'arg1'>) => void | Promise<void>, config?: {
    ttl?: number;
}): Promise<number[]>;
export declare function deploy_service(relay: string, cid: string, ipfs: string, error: (arg0: string, arg1: string, callParams: CallParams<'arg0' | 'arg1'>) => void | Promise<void>, config?: {
    ttl?: number;
}): Promise<string | null>;
export declare function deploy_service(peer: FluencePeer, relay: string, cid: string, ipfs: string, error: (arg0: string, arg1: string, callParams: CallParams<'arg0' | 'arg1'>) => void | Promise<void>, config?: {
    ttl?: number;
}): Promise<string | null>;
